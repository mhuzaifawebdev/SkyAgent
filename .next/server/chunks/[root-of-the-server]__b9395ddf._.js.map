{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/skyline-agent/src/lib/mongodb.js"],"sourcesContent":["import { MongoClient, ServerApiVersion } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {\r\n  serverApi: {\r\n    version: ServerApiVersion.v1,\r\n    strict: true,\r\n    deprecationErrors: true,\r\n  }\r\n};\r\n\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error(\"Please add your Mongo URI to .env.local\");\r\n}\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  // Use a global var to preserve connection in dev mode\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options);\r\n    global._mongoClientPromise = client.connect();\r\n  }\r\n  clientPromise = global._mongoClientPromise;\r\n} else {\r\n  // In production, create a new client each time\r\n  client = new MongoClient(uri, options);\r\n  clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU;IACd,WAAW;QACT,SAAS,uGAAA,CAAA,mBAAgB,CAAC,EAAE;QAC5B,QAAQ;QACR,mBAAmB;IACrB;AACF;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,sDAAsD;IACtD,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,4CAAO,mBAAmB;AAC5C;;uCAMe","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/skyline-agent/src/app/api/todos/route.js"],"sourcesContent":["import clientPromise from \"@/lib/mongodb\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const client = await clientPromise;\r\n    const db = client.db(\"todoApp\");\r\n    const todos = await db.collection(\"todos\").find({}).sort({ pinned: -1, createdAt: -1 }).toArray();\r\n    return Response.json(todos);\r\n  } catch (error) {\r\n    return Response.json({ error: \"Failed to fetch todos\" }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const body = await req.json();\r\n    const client = await clientPromise;\r\n    const db = client.db(\"todoApp\");\r\n    const result = await db.collection(\"todos\").insertOne({\r\n      ...body,\r\n      createdAt: new Date(body.createdAt)\r\n    });\r\n    return Response.json({ insertedId: result.insertedId });\r\n  } catch (error) {\r\n    return Response.json({ error: \"Failed to add todo\" }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(req) {\r\n  try {\r\n    const body = await req.json();\r\n    const { id, ...updateFields } = body;\r\n    const client = await clientPromise;\r\n    const db = client.db(\"todoApp\");\r\n\r\n    await db.collection(\"todos\").updateOne(\r\n      { id },\r\n      { $set: updateFields }\r\n    );\r\n\r\n    return Response.json({ message: \"Todo updated\" });\r\n  } catch (error) {\r\n    return Response.json({ error: \"Failed to update todo\" }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(req) {\r\n  try {\r\n    const { id } = await req.json();\r\n    const client = await clientPromise;\r\n    const db = client.db(\"todoApp\");\r\n    await db.collection(\"todos\").deleteOne({ id });\r\n    return Response.json({ message: \"Todo deleted\" });\r\n  } catch (error) {\r\n    return Response.json({ error: \"Failed to delete todo\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,QAAQ,MAAM,GAAG,UAAU,CAAC,SAAS,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAAE,QAAQ,CAAC;YAAG,WAAW,CAAC;QAAE,GAAG,OAAO;QAC/F,OAAO,SAAS,IAAI,CAAC;IACvB,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IACzE;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,SAAS,SAAS,CAAC;YACpD,GAAG,IAAI;YACP,WAAW,IAAI,KAAK,KAAK,SAAS;QACpC;QACA,OAAO,SAAS,IAAI,CAAC;YAAE,YAAY,OAAO,UAAU;QAAC;IACvD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF;AAEO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,GAAG;QAChC,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QAErB,MAAM,GAAG,UAAU,CAAC,SAAS,SAAS,CACpC;YAAE;QAAG,GACL;YAAE,MAAM;QAAa;QAGvB,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAe;IACjD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IACzE;AACF;AAEO,eAAe,OAAO,GAAG;IAC9B,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,IAAI,IAAI;QAC7B,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,GAAG,UAAU,CAAC,SAAS,SAAS,CAAC;YAAE;QAAG;QAC5C,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAe;IACjD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IACzE;AACF","debugId":null}}]
}