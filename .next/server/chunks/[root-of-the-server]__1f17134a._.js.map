{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/skyline-agent/src/lib/mongodb.js"],"sourcesContent":["import { MongoClient, ServerApiVersion } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error(\"Please add your Mongo URI to .env.local\");\r\n}\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, {\r\n      serverApi: {\r\n        version: ServerApiVersion.v1,\r\n        strict: true,\r\n        deprecationErrors: true,\r\n      }\r\n    });\r\n    global._mongoClientPromise = client.connect();\r\n  }\r\n  clientPromise = global._mongoClientPromise;\r\n} else {\r\n  client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: ServerApiVersion.v1,\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    }\r\n  });\r\n  clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;YAC5B,WAAW;gBACT,SAAS,uGAAA,CAAA,mBAAgB,CAAC,EAAE;gBAC5B,QAAQ;gBACR,mBAAmB;YACrB;QACF;QACA,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,4CAAO,mBAAmB;AAC5C;;uCAWe","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/skyline-agent/src/pages/api/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport clientPromise from '@/lib/mongodb';\r\n\r\n// GET /api/todos - Fetch all todos\r\nexport async function GET() {\r\n  try {\r\n    const client = await clientPromise;\r\n    const db = client.db('todoApp');\r\n    const todos = await db.collection('todos').find({}).toArray();\r\n\r\n    return NextResponse.json(todos, { status: 200 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}\r\n\r\n// POST /api/todos - Add a new todo\r\nexport async function POST(request) {\r\n  try {\r\n    const data = await request.json(); // Parse JSON body\r\n    const client = await clientPromise;\r\n    const db = client.db('todoApp');\r\n    const result = await db.collection('todos').insertOne(data);\r\n\r\n    return NextResponse.json(result, { status: 201 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,8GAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,QAAQ,MAAM,GAAG,UAAU,CAAC,SAAS,IAAI,CAAC,CAAC,GAAG,OAAO;QAE3D,OAAO,uHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;YAAE,QAAQ;QAAI;IAChD,EAAE,OAAO,OAAO;QACd,OAAO,uHAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF;AAGO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI,IAAI,kBAAkB;QACrD,MAAM,SAAS,MAAM,8GAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,SAAS,SAAS,CAAC;QAEtD,OAAO,uHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,OAAO;QACd,OAAO,uHAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}}]
}